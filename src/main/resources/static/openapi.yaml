openapi: 3.0.3
info:
  title: Inventory Service API
  description: API for checking product inventory
  version: v1.0.0
servers:
  - url: http://localhost:8082
    description: Inventory service server
paths:
  /api/inventory/check-stock:
    get:
      summary: Check if product is in stock
      description: Check if a product with given SKU code and quantity is available in inventory
      operationId: checkStock
      parameters:
        - name: skuCode
          in: query
          required: true
          description: Product SKU code
          schema:
            type: string
            example: "IPHONE13-128"
        - name: quantity
          in: query
          required: true
          description: Required quantity
          schema:
            type: integer
            format: int32
            example: 2
      responses:
        '200':
          description: Stock check result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockCheckResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/inventory/add:
    post:
      summary: add product in stock
      description: add new or update product in stock
      operationId: addItem
      requestBody:
        description: add product in stock
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddInventoryRequest'
      responses:
        200:
          description: add Item successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddInventoryResponse'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddInventoryErrorResponse'
  /warmup:
    get:
      summary: Warmup endpoint
      description: Endpoint to warm up the service
      operationId: warmup
      responses:
        '200':
          description: Service warmed up
          content:
            application/json:
              schema:
                type: string
                example: "{}"
components:
  schemas:
    StockCheckRequest:
      type: object
      required:
        - skuCode
        - quantity
      properties:
        skuCode:
          type: string
          description: Product SKU code
          example: "IPHONE13-128"
        quantity:
          type: integer
          format: int32
          description: Required quantity
          minimum: 1
          example: 2
    StockCheckResponse:
      type: boolean
      description: Whether the product is in stock with required quantity
      example: true
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2023-05-20T14:30:15.123Z"
        status:
          type: integer
          example: 400
        error:
          type: string
          example: "Bad Request"
        message:
          type: string
          example: "Invalid SKU code"
        path:
          type: string
          example: "/api/inventory/check-stock"
    AddInventoryRequest:
      type: object
      required:
        - skuCode
        - quantity
      properties:
        skuCode:
          type: string
          example: "IPHONE13-128"
        quantity:
          type: integer
          format: int32
          example: 1
    AddInventoryResponse:
      type: object
      properties:
        skuCode:
          type: string
          example: "IPHONE13-128"
        quantity:
          type: integer
          format: int32
          example: 1
    AddInventoryErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2023-05-20T14:30:15.123Z"
        status:
          type: integer
          example: 404
        error:
          type: string
          example: "Not Found"
        message:
          type: string
          example: "Product with Skucode: IPHONE13-128 is not in stock"
        path:
          type: string
          example: "/api/inventory/add"